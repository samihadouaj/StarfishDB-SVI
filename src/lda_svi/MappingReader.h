#ifndef MAPPING_READER_H
#define MAPPING_READER_H

#include <unordered_map>
#include <string>
#include <stdexcept>

/**
 * @class MappingReader
 * @brief Reads and provides access to position mappings generated by collapse_data_to_disk()
 * 
 * This class parses a mapping file that correlates original document positions with 
 * their corresponding output groups after data aggregation. It enables efficient
 * lookups to translate between input word positions and their collapsed output groups.
 * 
 * File Format Expectations:
 * - Each line contains "<input_pos> <output_group>" pairs
 * - Example:
 *   5 0
 *   7 0
 *   3 1
 */
class MappingReader {
public:
    // Constructor that reads and parses the mapping file
    explicit MappingReader(const std::string& mapping_file_path);

    // Get the output group for a given input position
    int get_output_group(int input_position) const;

    // Get all mappings as a const reference
    const std::unordered_map<int, int>& get_all_mappings() const;

private:
    std::unordered_map<int, int> position_map;  // input_pos -> output_group
};

#endif // MAPPING_READER_H